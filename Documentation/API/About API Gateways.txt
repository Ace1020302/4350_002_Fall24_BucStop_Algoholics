About API Gateways

API Gateways are pieces of software implemented in a system architecture that take in calls for APIs and redirect them to the appropriate services. 
They work by acting as a central point of communication between the client (users) and the system, accepting API calls from clients when they need to use said services. 
These calls are taken to the appropriate services in the backend of the system, where each service runs their functionalities to answer the calls, then give their responses back to the API gateway. 
Finally, the API gateway returns all of the requested API responses in a combined format to the client, ensuring they get it all at once instead of in a piecemeal state. 
The services typically involved in satisfying API calls are APIs, hence the term "API gateway", though microservices can be used instead of/alongside APIs, depending on the system architecture. 

Aside from aggregating and servicing requests, API gateways have some additional benefits that allow them to serve multiple duties at once in a system architecture. 
They can be used to collect metrics based on the incoming requests and who is sending them, perform load balancing on traffic to lessen the strain on the system, and can authenticate the incoming traffic to ensure that it is legitimate, among other functionalities. 
That is not to say that API gateways are a panacea for developing a system architecture, as they can just as easily prove a single point of failure if not well-maintained. 
API gateways are, however, multi-faceted and can consolidate many separate functionalities into a lighter, more compact package that allows for greater efficiency in a system. 
